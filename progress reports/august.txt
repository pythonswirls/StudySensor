4.4.2024
-met in iesb to discuss overall project framework
-after reasoning with our strengths and weaknesses and tasks to be done:
    -Steph:  *in charge of designing GPIO function interface framework
             *draw prgram GPIO flowchart
    -Joseph: *research tkinter GUI and other GUI modules.
             *make working GUI draft
    -August: *make circuit digram of all parts and wires in software
             *make order sheet of parts
    -all     *get familiar with git

5.6.2024
-met and discussed in class how our overall project is coming together and the overall picture:
    -by this time, joseph has a fully working final GUI. what must be thought of is the tethering of data 
        passed through from the main file to the GUI.
    -Me and Steph discussed the overall outline of main and brainstormed/psuedocoded how a few important 
        parts of the programwould gather and return data. They were the "sensor read" function, and 
        the main GUI loop
-later this evening, me and stephanie have:
    -make a rough draft of our presentation fold-up board
    -helped fix Stephanie's git setup (without breaking anything yay)
    -started to type out pseudocode for respective functions
        -implemented real code
    -created a "main.py" to organize everything
    -ran tests on the raspberry pi, and debugged potential GPIO sensor issues
*in this process I have pulled all branches into mine, and will combine all changes with no conflictions and
    push to main

5.8.2024
-me and Stephaie met in the evening and worked for hours finalizing the Sensor.py file and talked about how Main.py 
    connects everything. (utilizes classes and modifies GUI)
-we also translated everything to Le Potato and debugged the operation of the code and the Sensors
-Stephanie additionally drafted the presenattion tri-fold board to be completed 5.9.2024

5.9.2024:
-we've completed the tri fold board
-we intially had issue with Poatato GPIO/pineworkslabs layout, but it works now!
    -our friend Dylan hlped us explore other GPIO avenues initially such as different modules or an arduino
-using csc 130 code, we've properly setup the sonic sensor usage by python.
-pygame initially excludes all other code and runs without printlines, but we've found out (2) different pygame
    refresh methods, and found that then .flip method is the most effective way for GUI.py not to interfere
    with the rest of the code files

-we sucessfully debugged data type-realted errors when passing databack and forth to GUI and Sensor class instances
-we expirimented with a distance multiplier, but found more accuracy with raw time values

-finally, as of right now, we are currenlty calibratingt he sensors with SETTLE_TIME, for better accuracy
    -collectively, the senor readings rate should match a persons walking speed
    -we just need to:
        finish calibration
        pull Joeseph's GUI.py restructuring 


-me and Stephaie met in the evening and worked for for hours finalizing the Sensor.py file and how Main.py connects everything. (utilizes classes and modifies GUI)
-we also translated everything to Le Potato and debugged the operation of the code and the Sensors
-Stephanie additionally drafted the presentation tri-fold board to be completed 5.9.2024

